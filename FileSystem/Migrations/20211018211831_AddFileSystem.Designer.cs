// <auto-generated />
using System;
using FileSystem.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FileSystem.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20211018211831_AddFileSystem")]
    partial class AddFileSystem
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FileSystem.Domain.Directories.Directory", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex(new[] { "Name", "ParentId" }, "IX_UniqueNameInDirectory")
                        .IsUnique();

                    b.ToTable("Directories");
                });

            modelBuilder.Entity("FileSystem.Domain.Files.File", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("Content")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex(new[] { "Name", "ParentId" }, "IX_UniqueFileNameInDirectory")
                        .IsUnique();

                    b.ToTable("Files");
                });

            modelBuilder.Entity("FileSystem.Domain.Directories.Directory", b =>
                {
                    b.HasOne("FileSystem.Domain.Directories.Directory", null)
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("FileSystem.Domain.Files.File", b =>
                {
                    b.HasOne("FileSystem.Domain.Directories.Directory", null)
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
